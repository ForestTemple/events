CREATE TABLE Locations (
	lid SERIAL PRIMARY KEY,
	latitude REAL NOT NULL,
	longitude REAL NOT NULL,
	name VARCHAR(100)
);

CREATE TABLE Universities (
	unid SERIAL PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	description VARCHAR(200),
	lid INTEGER NOT NULL,
	num_students INTEGER,
	FOREIGN KEY (lid) REFERENCES Locations
);


CREATE TABLE Users (
	uid SERIAL PRIMARY KEY,
	unid INTEGER,
	email VARCHAR(50) UNIQUE NOT NULL,
	name VARCHAR(50) NOT NULL,
	hash VARCHAR(256) NOT NULL,
	salt VARCHAR(128) NOT NULL,
	FOREIGN KEY (unid) REFERENCES Universities(unid)
);

CREATE TABLE Super_Admins (
	uid INTEGER PRIMARY KEY,
	FOREIGN KEY (uid) REFERENCES Users(uid)
		ON DELETE CASCADE
);

CREATE TABLE RSOs (
	rid SERIAL PRIMARY KEY,
	name VARCHAR(100) NOT NULL
);

CREATE TABLE Admins (
	uid INTEGER PRIMARY KEY,
	rid INTEGER, /* not null */
	FOREIGN KEY (uid) REFERENCES Users(uid),
	FOREIGN KEY (rid) REFERENCES RSOs(rid)
);

CREATE TABLE Universities_Pictures (
	unid INTEGER,
	file_path VARCHAR(100) PRIMARY KEY,
	FOREIGN KEY (unid) REFERENCES Universities(unid)
		ON DELETE CASCADE
);

CREATE TABLE Events (
	eid SERIAL PRIMARY KEY,
	unid INTEGER,
	email VARCHAR(50) NOT NULL,
	name VARCHAR(100) NOT NULL,
	lid INTEGER NOT NULL,
	description VARCHAR(100),
	phone VARCHAR(30),
	datestamp DATE
);

CREATE TABLE Events_Private (
	eid INTEGER PRIMARY KEY,
	FOREIGN KEY (eid) REFERENCES Events(eid)
		ON DELETE CASCADE
);


CREATE TABLE Events_RSO (
	eid SERIAL PRIMARY KEY,
	rid INTEGER NOT NULL,
	FOREIGN KEY (eid) REFERENCES Events(eid)
		ON DELETE CASCADE,
	FOREIGN KEY (rid) REFERENCES RSOs(rid)
		ON DELETE CASCADE
);

CREATE TABLE RSOs_Member ( /* New model */
	rid INTEGER NOT NULL,
	uid INTEGER NOT NULL,
	FOREIGN KEY (rid) REFERENCES RSOs(rid),
	FOREIGN KEY (uid) REFERENCES Users(uid)
);

CREATE TABLE Comments (
	cid SERIAL PRIMARY KEY,
	eid INTEGER NOT NULL,
	uid INTEGER NOT NULL,
	text VARCHAR(200) NOT NULL,
	rating INTEGER,
	datestamp DATE,
	FOREIGN KEY (eid) REFERENCES Events(eid)
		ON DELETE CASCADE,
	FOREIGN KEY (uid) REFERENCES Users(uid)
);
